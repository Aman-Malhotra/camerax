//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: messages.proto

package dev.yanshouwang.camerax.message;

@kotlin.jvm.JvmSynthetic
inline fun cameraValue(block: dev.yanshouwang.camerax.message.CameraValueKt.Dsl.() -> Unit): dev.yanshouwang.camerax.message.Messages.CameraValue =
  dev.yanshouwang.camerax.message.CameraValueKt.Dsl._create(dev.yanshouwang.camerax.message.Messages.CameraValue.newBuilder()).apply { block() }._build()
object CameraValueKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  class Dsl private constructor(
    @kotlin.jvm.JvmField private val _builder: dev.yanshouwang.camerax.message.Messages.CameraValue.Builder
  ) {
    companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: dev.yanshouwang.camerax.message.Messages.CameraValue.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): dev.yanshouwang.camerax.message.Messages.CameraValue = _builder.build()

    /**
     * <code>string key = 1;</code>
     */
    var key: kotlin.String
      @JvmName("getKey")
      get() = _builder.getKey()
      @JvmName("setKey")
      set(value) {
        _builder.setKey(value)
      }
    /**
     * <code>string key = 1;</code>
     */
    fun clearKey() {
      _builder.clearKey()
    }

    /**
     * <code>.messages.TextureValue texture_value = 2;</code>
     */
    var textureValue: dev.yanshouwang.camerax.message.Messages.TextureValue
      @JvmName("getTextureValue")
      get() = _builder.getTextureValue()
      @JvmName("setTextureValue")
      set(value) {
        _builder.setTextureValue(value)
      }
    /**
     * <code>.messages.TextureValue texture_value = 2;</code>
     */
    fun clearTextureValue() {
      _builder.clearTextureValue()
    }
    /**
     * <code>.messages.TextureValue texture_value = 2;</code>
     * @return Whether the textureValue field is set.
     */
    fun hasTextureValue(): kotlin.Boolean {
      return _builder.hasTextureValue()
    }

    /**
     * <code>.messages.TorchValue torch_value = 3;</code>
     */
    var torchValue: dev.yanshouwang.camerax.message.Messages.TorchValue
      @JvmName("getTorchValue")
      get() = _builder.getTorchValue()
      @JvmName("setTorchValue")
      set(value) {
        _builder.setTorchValue(value)
      }
    /**
     * <code>.messages.TorchValue torch_value = 3;</code>
     */
    fun clearTorchValue() {
      _builder.clearTorchValue()
    }
    /**
     * <code>.messages.TorchValue torch_value = 3;</code>
     * @return Whether the torchValue field is set.
     */
    fun hasTorchValue(): kotlin.Boolean {
      return _builder.hasTorchValue()
    }

    /**
     * <code>.messages.ZoomValue zoom_value = 4;</code>
     */
    var zoomValue: dev.yanshouwang.camerax.message.Messages.ZoomValue
      @JvmName("getZoomValue")
      get() = _builder.getZoomValue()
      @JvmName("setZoomValue")
      set(value) {
        _builder.setZoomValue(value)
      }
    /**
     * <code>.messages.ZoomValue zoom_value = 4;</code>
     */
    fun clearZoomValue() {
      _builder.clearZoomValue()
    }
    /**
     * <code>.messages.ZoomValue zoom_value = 4;</code>
     * @return Whether the zoomValue field is set.
     */
    fun hasZoomValue(): kotlin.Boolean {
      return _builder.hasZoomValue()
    }
  }
}
@kotlin.jvm.JvmSynthetic
inline fun dev.yanshouwang.camerax.message.Messages.CameraValue.copy(block: dev.yanshouwang.camerax.message.CameraValueKt.Dsl.() -> Unit): dev.yanshouwang.camerax.message.Messages.CameraValue =
  dev.yanshouwang.camerax.message.CameraValueKt.Dsl._create(this.toBuilder()).apply { block() }._build()
