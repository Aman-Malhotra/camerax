//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: messages.proto

package dev.yanshouwang.camerax.messages;

@kotlin.jvm.JvmSynthetic
public inline fun cameraSelector(block: dev.yanshouwang.camerax.messages.CameraSelectorKt.Dsl.() -> kotlin.Unit): dev.yanshouwang.camerax.messages.Messages.CameraSelector =
  dev.yanshouwang.camerax.messages.CameraSelectorKt.Dsl._create(dev.yanshouwang.camerax.messages.Messages.CameraSelector.newBuilder()).apply { block() }._build()
public object CameraSelectorKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: dev.yanshouwang.camerax.messages.Messages.CameraSelector.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: dev.yanshouwang.camerax.messages.Messages.CameraSelector.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): dev.yanshouwang.camerax.messages.Messages.CameraSelector = _builder.build()

    /**
     * <code>.messages.CameraFacing facing = 1;</code>
     */
    public var facing: dev.yanshouwang.camerax.messages.Messages.CameraFacing
      @JvmName("getFacing")
      get() = _builder.getFacing()
      @JvmName("setFacing")
      set(value) {
        _builder.setFacing(value)
      }
    /**
     * <code>.messages.CameraFacing facing = 1;</code>
     */
    public fun clearFacing() {
      _builder.clearFacing()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun dev.yanshouwang.camerax.messages.Messages.CameraSelector.copy(block: dev.yanshouwang.camerax.messages.CameraSelectorKt.Dsl.() -> kotlin.Unit): dev.yanshouwang.camerax.messages.Messages.CameraSelector =
  dev.yanshouwang.camerax.messages.CameraSelectorKt.Dsl._create(this.toBuilder()).apply { block() }._build()
