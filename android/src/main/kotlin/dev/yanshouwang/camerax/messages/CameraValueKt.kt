//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: messages.proto

package dev.yanshouwang.camerax.messages;

@kotlin.jvm.JvmSynthetic
public inline fun cameraValue(block: dev.yanshouwang.camerax.messages.CameraValueKt.Dsl.() -> kotlin.Unit): dev.yanshouwang.camerax.messages.Messages.CameraValue =
  dev.yanshouwang.camerax.messages.CameraValueKt.Dsl._create(dev.yanshouwang.camerax.messages.Messages.CameraValue.newBuilder()).apply { block() }._build()
public object CameraValueKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: dev.yanshouwang.camerax.messages.Messages.CameraValue.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: dev.yanshouwang.camerax.messages.Messages.CameraValue.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): dev.yanshouwang.camerax.messages.Messages.CameraValue = _builder.build()

    /**
     * <code>int32 texture_id = 1;</code>
     */
    public var textureId: kotlin.Int
      @JvmName("getTextureId")
      get() = _builder.getTextureId()
      @JvmName("setTextureId")
      set(value) {
        _builder.setTextureId(value)
      }
    /**
     * <code>int32 texture_id = 1;</code>
     */
    public fun clearTextureId() {
      _builder.clearTextureId()
    }

    /**
     * <code>int32 texture_width = 2;</code>
     */
    public var textureWidth: kotlin.Int
      @JvmName("getTextureWidth")
      get() = _builder.getTextureWidth()
      @JvmName("setTextureWidth")
      set(value) {
        _builder.setTextureWidth(value)
      }
    /**
     * <code>int32 texture_width = 2;</code>
     */
    public fun clearTextureWidth() {
      _builder.clearTextureWidth()
    }

    /**
     * <code>int32 texture_height = 3;</code>
     */
    public var textureHeight: kotlin.Int
      @JvmName("getTextureHeight")
      get() = _builder.getTextureHeight()
      @JvmName("setTextureHeight")
      set(value) {
        _builder.setTextureHeight(value)
      }
    /**
     * <code>int32 texture_height = 3;</code>
     */
    public fun clearTextureHeight() {
      _builder.clearTextureHeight()
    }

    /**
     * <code>bool torch_available = 4;</code>
     */
    public var torchAvailable: kotlin.Boolean
      @JvmName("getTorchAvailable")
      get() = _builder.getTorchAvailable()
      @JvmName("setTorchAvailable")
      set(value) {
        _builder.setTorchAvailable(value)
      }
    /**
     * <code>bool torch_available = 4;</code>
     */
    public fun clearTorchAvailable() {
      _builder.clearTorchAvailable()
    }

    /**
     * <code>double zoom_minimum = 5;</code>
     */
    public var zoomMinimum: kotlin.Double
      @JvmName("getZoomMinimum")
      get() = _builder.getZoomMinimum()
      @JvmName("setZoomMinimum")
      set(value) {
        _builder.setZoomMinimum(value)
      }
    /**
     * <code>double zoom_minimum = 5;</code>
     */
    public fun clearZoomMinimum() {
      _builder.clearZoomMinimum()
    }

    /**
     * <code>double zoom_maximum = 6;</code>
     */
    public var zoomMaximum: kotlin.Double
      @JvmName("getZoomMaximum")
      get() = _builder.getZoomMaximum()
      @JvmName("setZoomMaximum")
      set(value) {
        _builder.setZoomMaximum(value)
      }
    /**
     * <code>double zoom_maximum = 6;</code>
     */
    public fun clearZoomMaximum() {
      _builder.clearZoomMaximum()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun dev.yanshouwang.camerax.messages.Messages.CameraValue.copy(block: dev.yanshouwang.camerax.messages.CameraValueKt.Dsl.() -> kotlin.Unit): dev.yanshouwang.camerax.messages.Messages.CameraValue =
  dev.yanshouwang.camerax.messages.CameraValueKt.Dsl._create(this.toBuilder()).apply { block() }._build()
