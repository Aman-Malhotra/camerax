//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: messages.proto

package dev.yanshouwang.camerax;

@kotlin.jvm.JvmSynthetic
public inline fun command(block: dev.yanshouwang.camerax.CommandKt.Dsl.() -> kotlin.Unit): dev.yanshouwang.camerax.Messages.Command =
  dev.yanshouwang.camerax.CommandKt.Dsl._create(dev.yanshouwang.camerax.Messages.Command.newBuilder()).apply { block() }._build()
public object CommandKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: dev.yanshouwang.camerax.Messages.Command.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: dev.yanshouwang.camerax.Messages.Command.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): dev.yanshouwang.camerax.Messages.Command = _builder.build()

    /**
     * <code>.messages.CommandCategory category = 1;</code>
     */
    public var category: dev.yanshouwang.camerax.Messages.CommandCategory
      @JvmName("getCategory")
      get() = _builder.getCategory()
      @JvmName("setCategory")
      set(value) {
        _builder.setCategory(value)
      }
    /**
     * <code>.messages.CommandCategory category = 1;</code>
     */
    public fun clearCategory() {
      _builder.clearCategory()
    }

    /**
     * <code>.messages.CameraSelector selector = 2;</code>
     */
    public var selector: dev.yanshouwang.camerax.Messages.CameraSelector
      @JvmName("getSelector")
      get() = _builder.getSelector()
      @JvmName("setSelector")
      set(value) {
        _builder.setSelector(value)
      }
    /**
     * <code>.messages.CameraSelector selector = 2;</code>
     */
    public fun clearSelector() {
      _builder.clearSelector()
    }
    /**
     * <code>.messages.CameraSelector selector = 2;</code>
     * @return Whether the selector field is set.
     */
    public fun hasSelector(): kotlin.Boolean {
      return _builder.hasSelector()
    }

    /**
     * <code>string uuid = 3;</code>
     */
    public var uuid: kotlin.String
      @JvmName("getUuid")
      get() = _builder.getUuid()
      @JvmName("setUuid")
      set(value) {
        _builder.setUuid(value)
      }
    /**
     * <code>string uuid = 3;</code>
     */
    public fun clearUuid() {
      _builder.clearUuid()
    }

    /**
     * <code>bool torch_state = 4;</code>
     */
    public var torchState: kotlin.Boolean
      @JvmName("getTorchState")
      get() = _builder.getTorchState()
      @JvmName("setTorchState")
      set(value) {
        _builder.setTorchState(value)
      }
    /**
     * <code>bool torch_state = 4;</code>
     */
    public fun clearTorchState() {
      _builder.clearTorchState()
    }

    /**
     * <code>double zoom_value = 5;</code>
     */
    public var zoomValue: kotlin.Double
      @JvmName("getZoomValue")
      get() = _builder.getZoomValue()
      @JvmName("setZoomValue")
      set(value) {
        _builder.setZoomValue(value)
      }
    /**
     * <code>double zoom_value = 5;</code>
     */
    public fun clearZoomValue() {
      _builder.clearZoomValue()
    }

    /**
     * <code>.messages.Size size = 6;</code>
     */
    public var size: dev.yanshouwang.camerax.Messages.Size
      @JvmName("getSize")
      get() = _builder.getSize()
      @JvmName("setSize")
      set(value) {
        _builder.setSize(value)
      }
    /**
     * <code>.messages.Size size = 6;</code>
     */
    public fun clearSize() {
      _builder.clearSize()
    }
    /**
     * <code>.messages.Size size = 6;</code>
     * @return Whether the size field is set.
     */
    public fun hasSize(): kotlin.Boolean {
      return _builder.hasSize()
    }

    /**
     * <code>.messages.Offset offset = 7;</code>
     */
    public var offset: dev.yanshouwang.camerax.Messages.Offset
      @JvmName("getOffset")
      get() = _builder.getOffset()
      @JvmName("setOffset")
      set(value) {
        _builder.setOffset(value)
      }
    /**
     * <code>.messages.Offset offset = 7;</code>
     */
    public fun clearOffset() {
      _builder.clearOffset()
    }
    /**
     * <code>.messages.Offset offset = 7;</code>
     * @return Whether the offset field is set.
     */
    public fun hasOffset(): kotlin.Boolean {
      return _builder.hasOffset()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun dev.yanshouwang.camerax.Messages.Command.copy(block: dev.yanshouwang.camerax.CommandKt.Dsl.() -> kotlin.Unit): dev.yanshouwang.camerax.Messages.Command =
  dev.yanshouwang.camerax.CommandKt.Dsl._create(this.toBuilder()).apply { block() }._build()
