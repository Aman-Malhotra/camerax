//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: communication.proto

package dev.yanshouwang.camerax.communication;

@kotlin.jvm.JvmSynthetic
inline fun torchArgs(block: dev.yanshouwang.camerax.communication.TorchArgsKt.Dsl.() -> Unit): dev.yanshouwang.camerax.communication.Communication.TorchArgs =
  dev.yanshouwang.camerax.communication.TorchArgsKt.Dsl._create(dev.yanshouwang.camerax.communication.Communication.TorchArgs.newBuilder()).apply { block() }._build()
object TorchArgsKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  class Dsl private constructor(
    @kotlin.jvm.JvmField private val _builder: dev.yanshouwang.camerax.communication.Communication.TorchArgs.Builder
  ) {
    companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: dev.yanshouwang.camerax.communication.Communication.TorchArgs.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): dev.yanshouwang.camerax.communication.Communication.TorchArgs = _builder.build()

    /**
     * <code>string key = 1;</code>
     */
    var key: kotlin.String
      @JvmName("getKey")
      get() = _builder.getKey()
      @JvmName("setKey")
      set(value) {
        _builder.setKey(value)
      }
    /**
     * <code>string key = 1;</code>
     */
    fun clearKey() {
      _builder.clearKey()
    }

    /**
     * <code>bool state = 2;</code>
     */
    var state: kotlin.Boolean
      @JvmName("getState")
      get() = _builder.getState()
      @JvmName("setState")
      set(value) {
        _builder.setState(value)
      }
    /**
     * <code>bool state = 2;</code>
     */
    fun clearState() {
      _builder.clearState()
    }
  }
}
@kotlin.jvm.JvmSynthetic
inline fun dev.yanshouwang.camerax.communication.Communication.TorchArgs.copy(block: dev.yanshouwang.camerax.communication.TorchArgsKt.Dsl.() -> Unit): dev.yanshouwang.camerax.communication.Communication.TorchArgs =
  dev.yanshouwang.camerax.communication.TorchArgsKt.Dsl._create(this.toBuilder()).apply { block() }._build()
